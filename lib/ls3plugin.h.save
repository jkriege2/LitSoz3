#ifndef LS3PLUGIN_H
#define LS3PLUGIN_H

#include <QtPlugin>
#include <QString>
#include <QMap>
#include <QVector>
#include <QVariant>

#include "ls3pluginservices.h"

/*! \brief LitSoz 3 Plugin base class

*/
class LS3Plugin {
    public:
        /** Default destructor */
        virtual ~LS3Plugin() {};

        /** \brief name for the plugin */
        virtual QString getName()=0;

        /** \brief short description for the plugin */
        virtual QString getDescription()=0;

        /** \brief author the plugin */
        virtual QString getAuthor()=0;

        /** \brief copyright information the plugin */
        virtual QString getCopyright()=0;

        /** \brief weblink for the plugin */
        virtual QString getWeblink()=0;

        /** \brief icon for the plugin */
        virtual QString getIconFilename()=0;

        /** \brief initialization method for the plugin (called after loading the plugin) */
        virtual void init()=0;

        /** \brief deinitialization method for the plugin (called before unloading the plugin) */
        virtual void deinit()=0;
};

/*! \brief LitSoz 3 Import Plugin

    The main functionality is implemented in the execute() method. This method returns a list of records. Each dataset
    is represented by a QMap<QString, QVariant> which maps from a field name (QString) to a value (QVariant). The main
    application (LitSoz 3.0) will take care of storing the imported data to the current table. Certain fields are filled
    automatically, if no value is provided by the plugin. For valid field names see \link ls3_database LitSoz 3.0 Databases \endlink
*/
class LS3PluginImport: public LS3Plugin {
    public:
        /** Default destructor */
        virtual ~LS3PluginImport() {};

        /*! \brief execute the plugin. After this method returns all data stored in the returned vector
                   will be added to the current dataset.

            \return a list of dataset to add to the database
            \param pluginServices service object that allows access to LitSoz 3 services
         */
        QVector<QMap<QString, QVariant> > execute(LS3PluginServices* pluginServices);
};

/*! \brief LitSoz 3 Export Plugin

    The main functionality is implemented in the execute() method. This method receives a list of records that should be exported.
    As for LS3PluginImport this list is stored as QVector<QMap<QString, QVariant> > where each item in the QVector is a record
    and each QString, QVariant pair is a field in the record.
    
    For valid field names see \link ls3_database LitSoz 3.0 Databases \endlink
*/
class LS3PluginExport: public LS3Plugin {
    public:
        /** Default destructor */
        virtual ~LS3PluginExport() {};

        /*! \brief execute the plugin. After this method returns all data stored in the returned vector
                   will be added to the current dataset.

            \return \c true on sucess and \c false else
            \param pluginServices service object that allows access to LitSoz 3 services
         */
        bool execute(QVector<QMap<QString, QVariant> >& data, LS3PluginServices* pluginServices);
};

Q_DECLARE_INTERFACE(LS3PluginImport,
                     "jkrieger.de.litsoz3.plugins.LS3PluginImport/1.0")
#endif // LS3PLUGIN_H
